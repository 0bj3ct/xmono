# -*- coding: utf-8 -*-
# -*- coding: utf-8 -*-
#file: opcode.py
#author: skeu
#description: il操作指令对象模块

opcodes = []
class OpCode(object):
    def __init__(self, n, t, op, size):
        self.name = n
        self.op = op
        self.arg_type = t
        self.args = []
        self.size = size
    def add_size(self, n):
        """增加指令占有的size"""
        self.size = self.size + n

def search_opcode(op_str):
    """根据opcode名字返回一个opcode对象"""
    for i in opcodes:
        if i.name == op_str:
            return OpCode(i.name, i.arg_type, i.op, i.size)
    return None

opcodes.append(OpCode('nop','InlineNone',['\x00'],1))
opcodes.append(OpCode('break','InlineNone',['\x01'],1))
opcodes.append(OpCode('ldarg.0','InlineNone',['\x02'],1))
opcodes.append(OpCode('ldarg.1','InlineNone',['\x03'],1))
opcodes.append(OpCode('ldarg.2','InlineNone',['\x04'],1))
opcodes.append(OpCode('ldarg.3','InlineNone',['\x05'],1))
opcodes.append(OpCode('ldloc.0','InlineNone',['\x06'],1))
opcodes.append(OpCode('ldloc.1','InlineNone',['\x07'],1))
opcodes.append(OpCode('ldloc.2','InlineNone',['\x08'],1))
opcodes.append(OpCode('ldloc.3','InlineNone',['\x09'],1))
opcodes.append(OpCode('stloc.0','InlineNone',['\x0a'],1))
opcodes.append(OpCode('stloc.1','InlineNone',['\x0b'],1))
opcodes.append(OpCode('stloc.2','InlineNone',['\x0c'],1))
opcodes.append(OpCode('stloc.3','InlineNone',['\x0d'],1))
opcodes.append(OpCode('ldarg.s','ShortInlineVar',['\x0e'],1))
opcodes.append(OpCode('ldarga.s','ShortInlineVar',['\x0f'],1))
opcodes.append(OpCode('starg.s','ShortInlineVar',['\x10'],1))
opcodes.append(OpCode('ldloc.s','ShortInlineVar',['\x11'],1))
opcodes.append(OpCode('ldloca.s','ShortInlineVar',['\x12'],1))
opcodes.append(OpCode('stloc.s','ShortInlineVar',['\x13'],1))
opcodes.append(OpCode('ldnull','InlineNone',['\x14'],1))
opcodes.append(OpCode('ldc.i4.m1','InlineNone',['\x15'],1))
opcodes.append(OpCode('ldc.i4.0','InlineNone',['\x16'],1))
opcodes.append(OpCode('ldc.i4.1','InlineNone',['\x17'],1))
opcodes.append(OpCode('ldc.i4.2','InlineNone',['\x18'],1))
opcodes.append(OpCode('ldc.i4.3','InlineNone',['\x19'],1))
opcodes.append(OpCode('ldc.i4.4','InlineNone',['\x1a'],1))
opcodes.append(OpCode('ldc.i4.5','InlineNone',['\x1b'],1))
opcodes.append(OpCode('ldc.i4.6','InlineNone',['\x1c'],1))
opcodes.append(OpCode('ldc.i4.7','InlineNone',['\x1d'],1))
opcodes.append(OpCode('ldc.i4.8','InlineNone',['\x1e'],1))
opcodes.append(OpCode('ldc.i4.s','ShortInlineI',['\x1f'],1))
opcodes.append(OpCode('ldc.i4','InlineI',['\x20'],1))
opcodes.append(OpCode('ldc.i8','InlineI8',['\x21'],1))
opcodes.append(OpCode('ldc.r4','ShortInlineR',['\x22'],1))
opcodes.append(OpCode('ldc.r8','InlineR',['\x23'],1))
opcodes.append(OpCode('unused99','InlineNone',['\x24'],1))
opcodes.append(OpCode('dup','InlineNone',['\x25'],1))
opcodes.append(OpCode('pop','InlineNone',['\x26'],1))
opcodes.append(OpCode('jmp','InlineMethod',['\x27'],1))
opcodes.append(OpCode('call','InlineMethod',['\x28'],1))
opcodes.append(OpCode('calli','InlineSig',['\x29'],1))
opcodes.append(OpCode('ret','InlineNone',['\x2a'],1))
opcodes.append(OpCode('br.s','ShortInlineBrTarget',['\x2b'],1))
opcodes.append(OpCode('brfalse.s','ShortInlineBrTarget',['\x2c'],1))
opcodes.append(OpCode('brtrue.s','ShortInlineBrTarget',['\x2d'],1))
opcodes.append(OpCode('beq.s','ShortInlineBrTarget',['\x2e'],1))
opcodes.append(OpCode('bge.s','ShortInlineBrTarget',['\x2f'],1))
opcodes.append(OpCode('bgt.s','ShortInlineBrTarget',['\x30'],1))
opcodes.append(OpCode('ble.s','ShortInlineBrTarget',['\x31'],1))
opcodes.append(OpCode('blt.s','ShortInlineBrTarget',['\x32'],1))
opcodes.append(OpCode('bne.un.s','ShortInlineBrTarget',['\x33'],1))
opcodes.append(OpCode('bge.un.s','ShortInlineBrTarget',['\x34'],1))
opcodes.append(OpCode('bgt.un.s','ShortInlineBrTarget',['\x35'],1))
opcodes.append(OpCode('ble.un.s','ShortInlineBrTarget',['\x36'],1))
opcodes.append(OpCode('blt.un.s','ShortInlineBrTarget',['\x37'],1))
opcodes.append(OpCode('br','InlineBrTarget',['\x38'],1))
opcodes.append(OpCode('brfalse','InlineBrTarget',['\x39'],1))
opcodes.append(OpCode('brtrue','InlineBrTarget',['\x3a'],1))
opcodes.append(OpCode('beq','InlineBrTarget',['\x3b'],1))
opcodes.append(OpCode('bge','InlineBrTarget',['\x3c'],1))
opcodes.append(OpCode('bgt','InlineBrTarget',['\x3d'],1))
opcodes.append(OpCode('ble','InlineBrTarget',['\x3e'],1))
opcodes.append(OpCode('blt','InlineBrTarget',['\x3f'],1))
opcodes.append(OpCode('bne.un','InlineBrTarget',['\x40'],1))
opcodes.append(OpCode('bge.un','InlineBrTarget',['\x41'],1))
opcodes.append(OpCode('bgt.un','InlineBrTarget',['\x42'],1))
opcodes.append(OpCode('ble.un','InlineBrTarget',['\x43'],1))
opcodes.append(OpCode('blt.un','InlineBrTarget',['\x44'],1))
opcodes.append(OpCode('switch','InlineSwitch',['\x45'],1))
opcodes.append(OpCode('ldind.i1','InlineNone',['\x46'],1))
opcodes.append(OpCode('ldind.u1','InlineNone',['\x47'],1))
opcodes.append(OpCode('ldind.i2','InlineNone',['\x48'],1))
opcodes.append(OpCode('ldind.u2','InlineNone',['\x49'],1))
opcodes.append(OpCode('ldind.i4','InlineNone',['\x4a'],1))
opcodes.append(OpCode('ldind.u4','InlineNone',['\x4b'],1))
opcodes.append(OpCode('ldind.i8','InlineNone',['\x4c'],1))
opcodes.append(OpCode('ldind.i','InlineNone',['\x4d'],1))
opcodes.append(OpCode('ldind.r4','InlineNone',['\x4e'],1))
opcodes.append(OpCode('ldind.r8','InlineNone',['\x4f'],1))
opcodes.append(OpCode('ldind.ref','InlineNone',['\x50'],1))
opcodes.append(OpCode('stind.ref','InlineNone',['\x51'],1))
opcodes.append(OpCode('stind.i1','InlineNone',['\x52'],1))
opcodes.append(OpCode('stind.i2','InlineNone',['\x53'],1))
opcodes.append(OpCode('stind.i4','InlineNone',['\x54'],1))
opcodes.append(OpCode('stind.i8','InlineNone',['\x55'],1))
opcodes.append(OpCode('stind.r4','InlineNone',['\x56'],1))
opcodes.append(OpCode('stind.r8','InlineNone',['\x57'],1))
opcodes.append(OpCode('add','InlineNone',['\x58'],1))
opcodes.append(OpCode('sub','InlineNone',['\x59'],1))
opcodes.append(OpCode('mul','InlineNone',['\x5a'],1))
opcodes.append(OpCode('div','InlineNone',['\x5b'],1))
opcodes.append(OpCode('div.un','InlineNone',['\x5c'],1))
opcodes.append(OpCode('rem','InlineNone',['\x5d'],1))
opcodes.append(OpCode('rem.un','InlineNone',['\x5e'],1))
opcodes.append(OpCode('and','InlineNone',['\x5f'],1))
opcodes.append(OpCode('or','InlineNone',['\x60'],1))
opcodes.append(OpCode('xor','InlineNone',['\x61'],1))
opcodes.append(OpCode('shl','InlineNone',['\x62'],1))
opcodes.append(OpCode('shr','InlineNone',['\x63'],1))
opcodes.append(OpCode('shr.un','InlineNone',['\x64'],1))
opcodes.append(OpCode('neg','InlineNone',['\x65'],1))
opcodes.append(OpCode('not','InlineNone',['\x66'],1))
opcodes.append(OpCode('conv.i1','InlineNone',['\x67'],1))
opcodes.append(OpCode('conv.i2','InlineNone',['\x68'],1))
opcodes.append(OpCode('conv.i4','InlineNone',['\x69'],1))
opcodes.append(OpCode('conv.i8','InlineNone',['\x6a'],1))
opcodes.append(OpCode('conv.r4','InlineNone',['\x6b'],1))
opcodes.append(OpCode('conv.r8','InlineNone',['\x6c'],1))
opcodes.append(OpCode('conv.u4','InlineNone',['\x6d'],1))
opcodes.append(OpCode('conv.u8','InlineNone',['\x6e'],1))
opcodes.append(OpCode('callvirt','InlineMethod',['\x6f'],1))
opcodes.append(OpCode('cpobj','InlineType',['\x70'],1))
opcodes.append(OpCode('ldobj','InlineType',['\x71'],1))
opcodes.append(OpCode('ldstr','InlineString',['\x72'],1))
opcodes.append(OpCode('newobj','InlineMethod',['\x73'],1))
opcodes.append(OpCode('castclass','InlineType',['\x74'],1))
opcodes.append(OpCode('isinst','InlineType',['\x75'],1))
opcodes.append(OpCode('conv.r.un','InlineNone',['\x76'],1))
opcodes.append(OpCode('unused58','InlineNone',['\x77'],1))
opcodes.append(OpCode('unused1','InlineNone',['\x78'],1))
opcodes.append(OpCode('unbox','InlineType',['\x79'],1))
opcodes.append(OpCode('throw','InlineNone',['\x7a'],1))
opcodes.append(OpCode('ldfld','InlineField',['\x7b'],1))
opcodes.append(OpCode('ldflda','InlineField',['\x7c'],1))
opcodes.append(OpCode('stfld','InlineField',['\x7d'],1))
opcodes.append(OpCode('ldsfld','InlineField',['\x7e'],1))
opcodes.append(OpCode('ldsflda','InlineField',['\x7f'],1))
opcodes.append(OpCode('stsfld','InlineField',['\x80'],1))
opcodes.append(OpCode('stobj','InlineType',['\x81'],1))
opcodes.append(OpCode('conv.ovf.i1.un','InlineNone',['\x82'],1))
opcodes.append(OpCode('conv.ovf.i2.un','InlineNone',['\x83'],1))
opcodes.append(OpCode('conv.ovf.i4.un','InlineNone',['\x84'],1))
opcodes.append(OpCode('conv.ovf.i8.un','InlineNone',['\x85'],1))
opcodes.append(OpCode('conv.ovf.u1.un','InlineNone',['\x86'],1))
opcodes.append(OpCode('conv.ovf.u2.un','InlineNone',['\x87'],1))
opcodes.append(OpCode('conv.ovf.u4.un','InlineNone',['\x88'],1))
opcodes.append(OpCode('conv.ovf.u8.un','InlineNone',['\x89'],1))
opcodes.append(OpCode('conv.ovf.i.un','InlineNone',['\x8a'],1))
opcodes.append(OpCode('conv.ovf.u.un','InlineNone',['\x8b'],1))
opcodes.append(OpCode('box','InlineType',['\x8c'],1))
opcodes.append(OpCode('newarr','InlineType',['\x8d'],1))
opcodes.append(OpCode('ldlen','InlineNone',['\x8e'],1))
opcodes.append(OpCode('ldelema','InlineType',['\x8f'],1))
opcodes.append(OpCode('ldelem.i1','InlineNone',['\x90'],1))
opcodes.append(OpCode('ldelem.u1','InlineNone',['\x91'],1))
opcodes.append(OpCode('ldelem.i2','InlineNone',['\x92'],1))
opcodes.append(OpCode('ldelem.u2','InlineNone',['\x93'],1))
opcodes.append(OpCode('ldelem.i4','InlineNone',['\x94'],1))
opcodes.append(OpCode('ldelem.u4','InlineNone',['\x95'],1))
opcodes.append(OpCode('ldelem.i8','InlineNone',['\x96'],1))
opcodes.append(OpCode('ldelem.i','InlineNone',['\x97'],1))
opcodes.append(OpCode('ldelem.r4','InlineNone',['\x98'],1))
opcodes.append(OpCode('ldelem.r8','InlineNone',['\x99'],1))
opcodes.append(OpCode('ldelem.ref','InlineNone',['\x9a'],1))
opcodes.append(OpCode('stelem.i','InlineNone',['\x9b'],1))
opcodes.append(OpCode('stelem.i1','InlineNone',['\x9c'],1))
opcodes.append(OpCode('stelem.i2','InlineNone',['\x9d'],1))
opcodes.append(OpCode('stelem.i4','InlineNone',['\x9e'],1))
opcodes.append(OpCode('stelem.i8','InlineNone',['\x9f'],1))
opcodes.append(OpCode('stelem.r4','InlineNone',['\xa0'],1))
opcodes.append(OpCode('stelem.r8','InlineNone',['\xa1'],1))
opcodes.append(OpCode('stelem.ref','InlineNone',['\xa2'],1))
opcodes.append(OpCode('ldelem','InlineType',['\xa3'],1))
opcodes.append(OpCode('stelem','InlineType',['\xa4'],1))
opcodes.append(OpCode('unbox.any','InlineType',['\xa5'],1))
opcodes.append(OpCode('unused5','InlineNone',['\xa6'],1))
opcodes.append(OpCode('unused6','InlineNone',['\xa7'],1))
opcodes.append(OpCode('unused7','InlineNone',['\xa8'],1))
opcodes.append(OpCode('unused8','InlineNone',['\xa9'],1))
opcodes.append(OpCode('unused9','InlineNone',['\xaa'],1))
opcodes.append(OpCode('unused10','InlineNone',['\xab'],1))
opcodes.append(OpCode('unused11','InlineNone',['\xac'],1))
opcodes.append(OpCode('unused12','InlineNone',['\xad'],1))
opcodes.append(OpCode('unused13','InlineNone',['\xae'],1))
opcodes.append(OpCode('unused14','InlineNone',['\xaf'],1))
opcodes.append(OpCode('unused15','InlineNone',['\xb0'],1))
opcodes.append(OpCode('unused16','InlineNone',['\xb1'],1))
opcodes.append(OpCode('unused17','InlineNone',['\xb2'],1))
opcodes.append(OpCode('conv.ovf.i1','InlineNone',['\xb3'],1))
opcodes.append(OpCode('conv.ovf.u1','InlineNone',['\xb4'],1))
opcodes.append(OpCode('conv.ovf.i2','InlineNone',['\xb5'],1))
opcodes.append(OpCode('conv.ovf.u2','InlineNone',['\xb6'],1))
opcodes.append(OpCode('conv.ovf.i4','InlineNone',['\xb7'],1))
opcodes.append(OpCode('conv.ovf.u4','InlineNone',['\xb8'],1))
opcodes.append(OpCode('conv.ovf.i8','InlineNone',['\xb9'],1))
opcodes.append(OpCode('conv.ovf.u8','InlineNone',['\xba'],1))
opcodes.append(OpCode('unused50','InlineNone',['\xbb'],1))
opcodes.append(OpCode('unused18','InlineNone',['\xbc'],1))
opcodes.append(OpCode('unused19','InlineNone',['\xbd'],1))
opcodes.append(OpCode('unused20','InlineNone',['\xbe'],1))
opcodes.append(OpCode('unused21','InlineNone',['\xbf'],1))
opcodes.append(OpCode('unused22','InlineNone',['\xc0'],1))
opcodes.append(OpCode('unused23','InlineNone',['\xc1'],1))
opcodes.append(OpCode('refanyval','InlineType',['\xc2'],1))
opcodes.append(OpCode('ckfinite','InlineNone',['\xc3'],1))
opcodes.append(OpCode('unused24','InlineNone',['\xc4'],1))
opcodes.append(OpCode('unused25','InlineNone',['\xc5'],1))
opcodes.append(OpCode('mkrefany','InlineType',['\xc6'],1))
opcodes.append(OpCode('unused59','InlineNone',['\xc7'],1))
opcodes.append(OpCode('unused60','InlineNone',['\xc8'],1))
opcodes.append(OpCode('unused61','InlineNone',['\xc9'],1))
opcodes.append(OpCode('unused62','InlineNone',['\xca'],1))
opcodes.append(OpCode('unused63','InlineNone',['\xcb'],1))
opcodes.append(OpCode('unused64','InlineNone',['\xcc'],1))
opcodes.append(OpCode('unused65','InlineNone',['\xcd'],1))
opcodes.append(OpCode('unused66','InlineNone',['\xce'],1))
opcodes.append(OpCode('unused67','InlineNone',['\xcf'],1))
opcodes.append(OpCode('ldtoken','InlineTok',['\xd0'],1))
opcodes.append(OpCode('conv.u2','InlineNone',['\xd1'],1))
opcodes.append(OpCode('conv.u1','InlineNone',['\xd2'],1))
opcodes.append(OpCode('conv.i','InlineNone',['\xd3'],1))
opcodes.append(OpCode('conv.ovf.i','InlineNone',['\xd4'],1))
opcodes.append(OpCode('conv.ovf.u','InlineNone',['\xd5'],1))
opcodes.append(OpCode('add.ovf','InlineNone',['\xd6'],1))
opcodes.append(OpCode('add.ovf.un','InlineNone',['\xd7'],1))
opcodes.append(OpCode('mul.ovf','InlineNone',['\xd8'],1))
opcodes.append(OpCode('mul.ovf.un','InlineNone',['\xd9'],1))
opcodes.append(OpCode('sub.ovf','InlineNone',['\xda'],1))
opcodes.append(OpCode('sub.ovf.un','InlineNone',['\xdb'],1))
opcodes.append(OpCode('endfinally','InlineNone',['\xdc'],1))
opcodes.append(OpCode('leave','InlineBrTarget',['\xdd'],1))
opcodes.append(OpCode('leave.s','ShortInlineBrTarget',['\xde'],1))
opcodes.append(OpCode('stind.i','InlineNone',['\xdf'],1))
opcodes.append(OpCode('conv.u','InlineNone',['\xe0'],1))
opcodes.append(OpCode('unused26','InlineNone',['\xe1'],1))
opcodes.append(OpCode('unused27','InlineNone',['\xe2'],1))
opcodes.append(OpCode('unused28','InlineNone',['\xe3'],1))
opcodes.append(OpCode('unused29','InlineNone',['\xe4'],1))
opcodes.append(OpCode('unused30','InlineNone',['\xe5'],1))
opcodes.append(OpCode('unused31','InlineNone',['\xe6'],1))
opcodes.append(OpCode('unused32','InlineNone',['\xe7'],1))
opcodes.append(OpCode('unused33','InlineNone',['\xe8'],1))
opcodes.append(OpCode('unused34','InlineNone',['\xe9'],1))
opcodes.append(OpCode('unused35','InlineNone',['\xea'],1))
opcodes.append(OpCode('unused36','InlineNone',['\xeb'],1))
opcodes.append(OpCode('unused37','InlineNone',['\xec'],1))
opcodes.append(OpCode('unused38','InlineNone',['\xed'],1))
opcodes.append(OpCode('unused39','InlineNone',['\xee'],1))
opcodes.append(OpCode('unused40','InlineNone',['\xef'],1))
opcodes.append(OpCode('unused41','InlineNone',['\xf0'],1))
opcodes.append(OpCode('unused42','InlineNone',['\xf1'],1))
opcodes.append(OpCode('unused43','InlineNone',['\xf2'],1))
opcodes.append(OpCode('unused44','InlineNone',['\xf3'],1))
opcodes.append(OpCode('unused45','InlineNone',['\xf4'],1))
opcodes.append(OpCode('unused46','InlineNone',['\xf5'],1))
opcodes.append(OpCode('unused47','InlineNone',['\xf6'],1))
opcodes.append(OpCode('unused48','InlineNone',['\xf7'],1))
opcodes.append(OpCode('prefix7','InlineNone',['\xf8'],1))
opcodes.append(OpCode('prefix6','InlineNone',['\xf9'],1))
opcodes.append(OpCode('prefix5','InlineNone',['\xfa'],1))
opcodes.append(OpCode('prefix4','InlineNone',['\xfb'],1))
opcodes.append(OpCode('prefix3','InlineNone',['\xfc'],1))
opcodes.append(OpCode('prefix2','InlineNone',['\xfd'],1))
opcodes.append(OpCode('prefix1','InlineNone',['\xfe'],1))
opcodes.append(OpCode('prefixref','InlineNone',['\xff'],1))
opcodes.append(OpCode('arglist','InlineNone',['\xfe','\x00'],2))
opcodes.append(OpCode('ceq','InlineNone',['\xfe','\x01'],2))
opcodes.append(OpCode('cgt','InlineNone',['\xfe','\x02'],2))
opcodes.append(OpCode('cgt.un','InlineNone',['\xfe','\x03'],2))
opcodes.append(OpCode('clt','InlineNone',['\xfe','\x04'],2))
opcodes.append(OpCode('clt.un','InlineNone',['\xfe','\x05'],2))
opcodes.append(OpCode('ldftn','InlineMethod',['\xfe','\x06'],2))
opcodes.append(OpCode('ldvirtftn','InlineMethod',['\xfe','\x07'],2))
opcodes.append(OpCode('unused56','InlineNone',['\xfe','\x08'],2))
opcodes.append(OpCode('ldarg','InlineVar',['\xfe','\x09'],2))
opcodes.append(OpCode('ldarga','InlineVar',['\xfe','\x0a'],2))
opcodes.append(OpCode('starg','InlineVar',['\xfe','\x0b'],2))
opcodes.append(OpCode('ldloc','InlineVar',['\xfe','\x0c'],2))
opcodes.append(OpCode('ldloca','InlineVar',['\xfe','\x0d'],2))
opcodes.append(OpCode('stloc','InlineVar',['\xfe','\x0e'],2))
opcodes.append(OpCode('localloc','InlineNone',['\xfe','\x0f'],2))
opcodes.append(OpCode('unused57','InlineNone',['\xfe','\x10'],2))
opcodes.append(OpCode('endfilter','InlineNone',['\xfe','\x11'],2))
opcodes.append(OpCode('unaligned.','ShortInlineI',['\xfe','\x12'],2))
opcodes.append(OpCode('volatile.','InlineNone',['\xfe','\x13'],2))
opcodes.append(OpCode('tail.','InlineNone',['\xfe','\x14'],2))
opcodes.append(OpCode('initobj','InlineType',['\xfe','\x15'],2))
opcodes.append(OpCode('constrained.','InlineType',['\xfe','\x16'],2))
opcodes.append(OpCode('cpblk','InlineNone',['\xfe','\x17'],2))
opcodes.append(OpCode('initblk','InlineNone',['\xfe','\x18'],2))
opcodes.append(OpCode('no.','ShortInlineI',['\xfe','\x19'],2))
opcodes.append(OpCode('rethrow','InlineNone',['\xfe','\x1a'],2))
opcodes.append(OpCode('unused','InlineNone',['\xfe','\x1b'],2))
opcodes.append(OpCode('sizeof','InlineType',['\xfe','\x1c'],2))
opcodes.append(OpCode('refanytype','InlineNone',['\xfe','\x1d'],2))
opcodes.append(OpCode('readonly.','InlineNone',['\xfe','\x1e'],2))
opcodes.append(OpCode('unused53','InlineNone',['\xfe','\x1f'],2))
opcodes.append(OpCode('unused54','InlineNone',['\xfe','\x20'],2))
opcodes.append(OpCode('unused55','InlineNone',['\xfe','\x21'],2))
opcodes.append(OpCode('unused70','InlineNone',['\xfe','\x22'],2))
opcodes.append(OpCode('illegal','InlineNone',['\x00','\x00'],2))
opcodes.append(OpCode('endmac','InlineNone',['\x00','\x00'],2))
opcodes.append(OpCode('mono_icall','ShortInlineI',['\xf0','\x00'],2))
opcodes.append(OpCode('mono_objaddr','InlineNone',['\xf0','\x01'],2))
opcodes.append(OpCode('mono_ldptr','InlineI',['\xf0','\x02'],2))
opcodes.append(OpCode('mono_vtaddr','InlineNone',['\xf0','\x03'],2))
opcodes.append(OpCode('mono_newobj','InlineType',['\xf0','\x04'],2))
opcodes.append(OpCode('mono_retobj','InlineType',['\xf0','\x05'],2))
opcodes.append(OpCode('mono_ldnativeobj','InlineType',['\xf0','\x06'],2))
opcodes.append(OpCode('mono_cisinst','InlineType',['\xf0','\x07'],2))
opcodes.append(OpCode('mono_ccastclass','InlineType',['\xf0','\x08'],2))
opcodes.append(OpCode('mono_save_lmf','InlineNone',['\xf0','\x09'],2))
opcodes.append(OpCode('mono_restore_lmf','InlineNone',['\xf0','\x0a'],2))
opcodes.append(OpCode('mono_classconst','InlineI',['\xf0','\x0b'],2))
opcodes.append(OpCode('mono_not_taken','InlineNone',['\xf0','\x0c'],2))
opcodes.append(OpCode('mono_tls','InlineI',['\xf0','\x0d'],2))
opcodes.append(OpCode('mono_icall_addr','InlineI',['\xf0','\x0e'],2))
opcodes.append(OpCode('mono_dyn_call','InlineI',['\xf0','\x0f'],2))
#针对异常指令特殊添加
opcodes.append(OpCode('.try','InlineDot',[],0))
opcodes.append(OpCode('.catch','InlineDot',[],0))
opcodes.append(OpCode('.finally','InlineDot',[],0))
opcodes.append(OpCode('}','InlineNone',[],0))
